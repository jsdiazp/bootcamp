/*
  Variable

  Almacena datos
*/

// - Declarada sin inicializar

let apellido; // sin tipificar

let nombre: string; // tipificada

// - Declarada e inicializada

const edad = 40; // sin tipificar

let color: string = "white"; // tipificada

/*
  Tipo

  Almacena tipos de datos
*/

type Usuario = {
  nombre: string;
  apellido: string;
  rol: "admin" | "editor";
  color?: string;
};

/*
  Objeto

  Almacena datos con llaves
*/

const celular = {
  marca: "Xiaomi",
  referencia: "Mi 9",
  precio: 100_000,
}; // sin tipificar

const usuario1: Usuario = {
  nombre: "Joan",
  apellido: "Diaz del Castillo",
  rol: "admin",
}; // tipificada

/*
  Conjunto de datos

  Almacena datos con índices
*/

const groupDeTrabajo = ["María", "Fernando", "Andrés"]; // sin tipificar

const usuarios: Usuario[] = [
  usuario1,
  { nombre: "María", apellido: "Diaz del Castillo", rol: "editor" },
]; // tipificada

/*
  Función

  Almacena instrucciones

  Contiene:
    - Parámetros (Opcional): Variables sin inicializar
    - Retorno (Opcional): Detiene o retorna un dato en la función
*/

function errorDeAutenticacion() {
  console.log("Datos incorrectos");
  console.log("Acceso no autorizado");
} // sin tipificar

function esAdmin(usuario: Usuario): boolean {
  if (usuario.rol === "admin") {
    return true;
  } else {
    return false;
  }
} // tipificada

function esAdminTernario(usuario: Usuario): boolean {
  return usuario.rol === "admin" ? true : false; // ternario
} // tipificada

/*
  // Componente (React)

  Función que retorna código HTML

  Parámetros:
    - props: Propiedades que debe recibir como atributos en su etiqueta HTML

  Uso:
    - Se utiliza en HTML como etiqueta ej.:
      <Componente />
    - Se ingresan sus propiedades a través de los atributos de una etiqueta ej.:
      <Component propiedadX=""/>
*/

// - Almacenamiento de la tipificación de las propiedades

type ServiceProps = {
  name: string;
  description: string;
  color: "red" | "blue";
};

// - Declaración de función

function Service(props: ServiceProps): unknown {
  return (
    <div
      id="container"
      style={{ padding: 20, border: "1px solid white", color: props.color }}
    >
      <div>{props.name}</div>
      {props.description ? <div>{props.description}</div> : null}
    </div>
  );
}

// - Uso componente Service

function App(): unknown {
  return (
    <div>
      <Service
        name="DAM"
        description="Servicio de diseño adecuación y mantenimiento"
        color="red"
      />
    </div>
  );
}

// const assertions (TypeScript)
const f360Brands = ["aqua", "fachadas", "dam", "plus"] as const;

// Indexed Access Types (TypeScript)
type F360Brands = (typeof f360Brands)[number];

let brands: {
  [key in F360Brands]: {
    horizontalLines: "#7BABFF" | "#6DD076" | "#FFAF82" | "#B18CFF";
    verticalLine: "#5793FE" | "#55855A" | "#CB7B5B" | "#7E5DC5";
    360: "#4E7CCE" | "#55855A" | "#CB7B5B" | "#7E5DC5";
  };
} = {
  aqua: {
    horizontalLines: "#7BABFF",
    verticalLine: "#5793FE",
    360: "#4E7CCE",
  },
  fachadas: {
    horizontalLines: "#6DD076",
    verticalLine: "#55855A",
    360: "#55855A",
  },
  dam: {
    horizontalLines: "#FFAF82",
    verticalLine: "#CB7B5B",
    360: "#CB7B5B",
  },
  plus: {
    horizontalLines: "#B18CFF",
    verticalLine: "#7E5DC5",
    360: "#7E5DC5",
  },
};

type F360Props = {
  name: F360Brands;
  show360?: boolean;
  showBrand?: boolean;
  size?: number;
};

function F360Brand(props: F360Props): unknown | null {
  if (props.name in f360Brands) return null;

  return (
    <svg
      width="128"
      height="115"
      viewBox="0 0 128 115"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      {props.showBrand && (
        <path
          d="M8.24725 86.6301H11.724L19.7772 107.976H16.1549L14.3923 103.092H5.59519L3.81638 107.976H0.177882L8.24725 86.6301ZM6.69483 100.068H13.2926L10.0099 90.7699H9.96139L6.69483 100.068ZM32.8265 114.703V105.518C32.7619 105.787 32.5193 106.149 32.0988 106.601C31.6892 107.054 31.1286 107.464 30.417 107.83C29.7055 108.186 28.8538 108.364 27.862 108.364C26.6115 108.364 25.501 108.068 24.5308 107.475C23.5713 106.882 22.8166 106.057 22.2668 105C21.717 103.944 21.4421 102.726 21.4421 101.346C21.4421 99.9659 21.7062 98.7477 22.2345 97.6911C22.7627 96.6346 23.5012 95.8099 24.4499 95.217C25.3986 94.6132 26.4929 94.3114 27.7326 94.3114C28.6706 94.3114 29.4953 94.4731 30.2068 94.7965C30.9291 95.1092 31.5113 95.4757 31.9533 95.8962C32.4061 96.3166 32.681 96.6885 32.778 97.012V94.6995H36.271V114.703H32.8265ZM28.7353 105.566C29.4899 105.566 30.1745 105.389 30.789 105.033C31.4035 104.677 31.8886 104.187 32.2444 103.561C32.6001 102.925 32.778 102.187 32.778 101.346C32.778 100.505 32.6001 99.7718 32.2444 99.1465C31.8886 98.5105 31.4035 98.0146 30.789 97.6588C30.1745 97.2923 29.4899 97.109 28.7353 97.109C28.0345 97.109 27.3877 97.2869 26.7947 97.6426C26.2018 97.9876 25.7274 98.4781 25.3717 99.1142C25.0159 99.7503 24.838 100.494 24.838 101.346C24.838 102.197 25.0159 102.941 25.3717 103.577C25.7274 104.213 26.2018 104.704 26.7947 105.049C27.3877 105.394 28.0345 105.566 28.7353 105.566ZM42.7523 101.216C42.7523 102.51 43.0164 103.54 43.5447 104.305C44.0837 105.071 44.93 105.453 46.0835 105.453C47.2479 105.453 48.0941 105.071 48.6224 104.305C49.1507 103.54 49.4148 102.51 49.4148 101.216V94.6995H52.8431V101.653C52.8431 102.99 52.5789 104.165 52.0507 105.178C51.5224 106.181 50.757 106.963 49.7544 107.523C48.7518 108.084 47.5282 108.364 46.0835 108.364C44.6497 108.364 43.4315 108.084 42.4289 107.523C41.4263 106.963 40.6608 106.181 40.1326 105.178C39.6043 104.165 39.3402 102.99 39.3402 101.653V94.6995H42.7523V101.216ZM66.9746 107.976V105.518C66.8883 105.777 66.6404 106.132 66.2307 106.585C65.8318 107.038 65.282 107.448 64.5812 107.814C63.8913 108.181 63.0719 108.364 62.1232 108.364C60.8834 108.364 59.7676 108.068 58.7758 107.475C57.784 106.882 57.0024 106.057 56.431 105C55.8596 103.944 55.5739 102.726 55.5739 101.346C55.5739 99.9659 55.8596 98.7477 56.431 97.6911C57.0024 96.6346 57.784 95.8099 58.7758 95.217C59.7676 94.6132 60.8834 94.3114 62.1232 94.3114C63.0504 94.3114 63.8535 94.4731 64.5327 94.7965C65.2119 95.1199 65.7563 95.4919 66.166 95.9123C66.5864 96.3328 66.8452 96.6993 66.9422 97.012V94.6995H70.3705V107.976H66.9746ZM58.986 101.346C58.986 102.197 59.1747 102.941 59.552 103.577C59.9294 104.213 60.4199 104.704 61.0236 105.049C61.6381 105.394 62.2957 105.566 62.9965 105.566C63.7511 105.566 64.4195 105.389 65.0017 105.033C65.5946 104.677 66.0582 104.187 66.3924 103.561C66.7374 102.925 66.9099 102.187 66.9099 101.346C66.9099 100.505 66.7374 99.7718 66.3924 99.1465C66.0582 98.5105 65.5946 98.0146 65.0017 97.6588C64.4195 97.2923 63.7511 97.109 62.9965 97.109C62.2957 97.109 61.6381 97.2869 61.0236 97.6426C60.4199 97.9876 59.9294 98.4781 59.552 99.1142C59.1747 99.7503 58.986 100.494 58.986 101.346Z"
          fill="black"
        />
      )}
      {props.show360 && (
        <path
          d="M30.078 56.898C30.162 56.59 30.344 56.2213 30.624 55.792C30.904 55.3626 31.2867 54.952 31.772 54.56C32.2667 54.1586 32.8733 53.8273 33.592 53.566C34.32 53.2953 35.1693 53.16 36.14 53.16C37.316 53.16 38.3427 53.3793 39.22 53.818C40.1067 54.2473 40.7927 54.8446 41.278 55.61C41.7727 56.3753 42.02 57.2573 42.02 58.256C42.02 58.9093 41.894 59.5066 41.642 60.048C41.3993 60.5893 41.082 61.0373 40.69 61.392C40.3073 61.7466 39.9013 61.9706 39.472 62.064C39.948 62.12 40.4333 62.33 40.928 62.694C41.4227 63.058 41.838 63.548 42.174 64.164C42.51 64.78 42.678 65.5126 42.678 66.362C42.678 67.51 42.3933 68.532 41.824 69.428C41.264 70.324 40.4847 71.0286 39.486 71.542C38.4967 72.0553 37.358 72.312 36.07 72.312C34.7633 72.312 33.648 72.0833 32.724 71.626C31.8093 71.1686 31.0767 70.6086 30.526 69.946C29.9847 69.2833 29.6207 68.644 29.434 68.028L32.64 66.418C32.7613 66.8286 32.9667 67.2533 33.256 67.692C33.5547 68.1306 33.9373 68.504 34.404 68.812C34.88 69.1106 35.4307 69.26 36.056 69.26C36.7187 69.26 37.2833 69.1293 37.75 68.868C38.2167 68.6066 38.576 68.252 38.828 67.804C39.08 67.3466 39.206 66.8286 39.206 66.25C39.206 65.6433 39.0567 65.1393 38.758 64.738C38.4687 64.3366 38.086 64.0426 37.61 63.856C37.134 63.66 36.616 63.562 36.056 63.562H35.692V61.014H36.168C36.6533 61.014 37.1013 60.916 37.512 60.72C37.9227 60.5146 38.2493 60.2253 38.492 59.852C38.7347 59.4693 38.856 59.0213 38.856 58.508C38.856 57.808 38.6227 57.2153 38.156 56.73C37.6893 56.2446 37.0033 56.002 36.098 56.002C35.566 56.002 35.104 56.0906 34.712 56.268C34.3293 56.436 34.012 56.6506 33.76 56.912C33.5173 57.164 33.326 57.416 33.186 57.668C33.0553 57.9106 32.976 58.1066 32.948 58.256L30.078 56.898ZM52.2757 59.768C53.2743 59.768 54.217 60.02 55.1037 60.524C55.9997 61.028 56.7277 61.742 57.2877 62.666C57.857 63.5806 58.1417 64.6633 58.1417 65.914C58.1417 67.1553 57.8383 68.2566 57.2317 69.218C56.625 70.1793 55.813 70.9353 54.7957 71.486C53.7783 72.0366 52.6537 72.312 51.4217 72.312C50.171 72.312 49.037 72.046 48.0197 71.514C47.0023 70.982 46.1903 70.226 45.5837 69.246C44.9863 68.2566 44.6877 67.09 44.6877 65.746C44.6877 64.2806 44.9303 63.0486 45.4157 62.05C45.901 61.042 46.461 60.1506 47.0957 59.376L51.8557 53.496H55.9717L50.1197 60.44C50.269 60.272 50.5257 60.118 50.8897 59.978C51.2537 59.838 51.7157 59.768 52.2757 59.768ZM51.4217 69.428C52.0563 69.428 52.6303 69.274 53.1437 68.966C53.657 68.658 54.0677 68.2473 54.3757 67.734C54.6837 67.2113 54.8377 66.6326 54.8377 65.998C54.8377 65.3726 54.6837 64.8033 54.3757 64.29C54.0677 63.7766 53.657 63.366 53.1437 63.058C52.6303 62.75 52.0563 62.596 51.4217 62.596C50.7963 62.596 50.2223 62.75 49.6997 63.058C49.1863 63.366 48.7757 63.7766 48.4677 64.29C48.1597 64.8033 48.0057 65.3726 48.0057 65.998C48.0057 66.6326 48.1597 67.2113 48.4677 67.734C48.7757 68.2473 49.1863 68.658 49.6997 68.966C50.2223 69.274 50.7963 69.428 51.4217 69.428ZM60.1889 62.75C60.1889 61.126 60.3896 59.7166 60.7909 58.522C61.1923 57.318 61.7383 56.3193 62.4289 55.526C63.1196 54.7326 63.8989 54.14 64.7669 53.748C65.6443 53.356 66.5543 53.16 67.4969 53.16C68.4489 53.16 69.3589 53.356 70.2269 53.748C71.1043 54.14 71.8836 54.7326 72.5649 55.526C73.2463 56.3193 73.7829 57.318 74.1749 58.522C74.5763 59.7166 74.7769 61.126 74.7769 62.75C74.7769 64.4486 74.5763 65.9046 74.1749 67.118C73.7829 68.322 73.2463 69.3066 72.5649 70.072C71.8836 70.8373 71.1043 71.402 70.2269 71.766C69.3589 72.13 68.4489 72.312 67.4969 72.312C66.5543 72.312 65.6443 72.13 64.7669 71.766C63.8989 71.402 63.1196 70.8373 62.4289 70.072C61.7383 69.3066 61.1923 68.322 60.7909 67.118C60.3896 65.9046 60.1889 64.4486 60.1889 62.75ZM63.7169 62.75C63.7169 64.206 63.8756 65.4146 64.1929 66.376C64.5196 67.328 64.9676 68.0373 65.5369 68.504C66.1063 68.9706 66.7596 69.204 67.4969 69.204C68.2343 69.204 68.8829 68.9706 69.4429 68.504C70.0123 68.0373 70.4556 67.3233 70.7729 66.362C71.0996 65.4006 71.2629 64.1966 71.2629 62.75C71.2629 61.35 71.0996 60.1693 70.7729 59.208C70.4556 58.2466 70.0123 57.5186 69.4429 57.024C68.8829 56.52 68.2343 56.268 67.4969 56.268C66.7596 56.268 66.1063 56.52 65.5369 57.024C64.9676 57.5186 64.5196 58.2466 64.1929 59.208C63.8756 60.1693 63.7169 61.35 63.7169 62.75Z"
          fill={brands[props.name]?.[360]}
        />
      )}
      <rect
        y="25.8462"
        width="18.4615"
        height="46.1538"
        rx="4.64841"
        fill={brands[props.name]?.verticalLine}
      />
      <rect
        y="17.5385"
        width="17.5385"
        height="52.6154"
        rx="4.64841"
        transform="rotate(-90 0 17.5385)"
        fill={brands[props.name]?.horizontalLines}
      />
      <rect
        x="32.3077"
        y="25.8462"
        width="17.5385"
        height="32.3077"
        rx="4.64841"
        transform="rotate(90 32.3077 25.8462)"
        fill={brands[props.name]?.horizontalLines}
      />
      <rect
        opacity="0.5"
        y="34.1538"
        width="18.4615"
        height="18.4615"
        rx="9.23077"
        fill="white"
      />
    </svg>
  );
}

export default F360Brand;
